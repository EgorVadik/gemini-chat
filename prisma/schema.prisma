generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model UserApiLimit {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    userId    String   @unique
    count     Int      @default(0)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model UserSubscription {
    id                       String    @id @default(auto()) @map("_id") @db.ObjectId
    userId                   String    @unique
    stripeCustomerId         String?   @unique @map("stripe_customer_id")
    stripeSubscriptionId     String?   @unique @map("stripe_subscription_id")
    stripePriceId            String?   @map("stripe_price_id")
    stripeCurrentPeriodStart DateTime? @map("stripe_current_period_start")
    stripeCurrentPeriodEnd   DateTime? @map("stripe_current_period_end")
    createdAt                DateTime  @default(now())
}

model Chat {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    title     String?   @default("Untitled")
    userId    String
    messages  Message[]
}

model Message {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    content   String
    role      Role     @default(user)
    chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
    chatId    String   @db.ObjectId
    userId    String?
}

enum Role {
    user
    system
    assistant
}
